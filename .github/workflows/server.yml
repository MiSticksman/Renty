name: Server Module Java CI with Maven

on:
  push:
    paths:
      - 'app/server/**'
      - '.github/workflows/server.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven package
        run: mvn package --file app/server/project/pom.xml

      - name: Build Docker image
        run: docker build app/server/project --build-arg GITHUB_REPO=${{ github.repository }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Authenticate and deploy to Kubernetes
        env:
          KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
          KUBE_NAMESPACE: {{ github.actor }}
        run: |
          echo "$KUBECONFIG_FILE" > kubeconfig.yaml
          kubectl config use-context cloud_okteto_com-context --kubeconfig=kubeconfig.yaml
          kubectl apply --kubeconfig=kubeconfig.yaml --namespace=$KUBE_NAMESPACE -f app/server/project/k8s
